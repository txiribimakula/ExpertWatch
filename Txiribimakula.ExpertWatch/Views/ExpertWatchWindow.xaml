<UserControl x:Class="Txiribimakula.ExpertWatch.ExpertWatchWindow"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:drawing="clr-namespace:Txiribimakula.ExpertWatch.Drawing;assembly=Txiribimakula.ExpertWatch.Drawing"
             xmlns:local="clr-namespace:Txiribimakula.ExpertWatch"
             xmlns:converters="clr-namespace:Txiribimakula.ExpertDebug.Converters"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="500">
    <UserControl.Resources>
        <local:ArcToPathConverter x:Key="ArcToPathConverter"/>
        <local:PointToPathConverter x:Key="PointToPathConverter"/>
        <local:SegmentToPathConverter x:Key="SegmentToPathConverter"/>
        <converters:DrawablesToProgressConverter x:Key="DrawablesToProgressConverter"/>
        <converters:PointToTextConverter x:Key="PointToTextConverter"/>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="0.5*"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" Background="White" Cursor="Cross">
            <Grid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Reset View" Command="{Binding ResetViewCommand}"/>
                </ContextMenu>
            </Grid.ContextMenu>
            <b:Interaction.Triggers>
                <b:EventTrigger EventName="Loaded">
                    <b:CallMethodAction
                        TargetObject="{Binding}"
                        MethodName="OnLoaded" x:Name="loaded"/>
                </b:EventTrigger>
                <b:EventTrigger EventName="SizeChanged">
                    <b:CallMethodAction
                        TargetObject="{Binding}"
                        MethodName="OnSizeChanged" x:Name="sizeChanged"/>
                </b:EventTrigger>
                <b:EventTrigger EventName="MouseDown">
                    <b:CallMethodAction
                        TargetObject="{Binding}"
                        MethodName="OnMouseDown" x:Name="mouseDown"/>
                </b:EventTrigger>
                <b:EventTrigger EventName="MouseUp">
                    <b:CallMethodAction
                        TargetObject="{Binding}"
                        MethodName="OnMouseUp" x:Name="mouseUp"/>
                </b:EventTrigger>
                <b:EventTrigger EventName="MouseMove">
                    <b:CallMethodAction
                        TargetObject="{Binding}"
                        MethodName="OnMouseMove" x:Name="mouseMove"/>
                </b:EventTrigger>
                <b:EventTrigger EventName="MouseWheel">
                    <b:CallMethodAction
                        TargetObject="{Binding}"
                        MethodName="OnMouseWheel" x:Name="mouseWheel"/>
                </b:EventTrigger>
            </b:Interaction.Triggers>
            <TextBlock Text="{Binding CurrentCursorPoint, Converter={StaticResource PointToTextConverter}}" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0, 0, 5, 3"/>
            <ItemsControl ItemsSource="{Binding WatchItems}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Grid ClipToBounds="True"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <ItemsControl ItemsSource="{Binding Drawables}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <Canvas ClipToBounds="True"/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.Resources>
                                <DataTemplate DataType="{x:Type drawing:DrawableSegment}">
                                    <Path Opacity="0.7" Stroke="Black" StrokeThickness="2" Data="{Binding TransformedGeometry, Converter={StaticResource SegmentToPathConverter}, Mode=OneWay}"/>
                                </DataTemplate>
                                <DataTemplate DataType="{x:Type drawing:DrawableArc}">
                                    <Path Opacity="0.7" Stroke="Black" StrokeThickness="2" Data="{Binding TransformedGeometry, Converter={StaticResource ArcToPathConverter}, Mode=OneWay}"/>
                                </DataTemplate>
                                <DataTemplate DataType="{x:Type drawing:DrawablePoint}">
                                    <Path Opacity="0.9" Stroke="Black" Fill="Black" Data="{Binding TransformedGeometry, Converter={StaticResource PointToPathConverter}, Mode=OneWay}"/>
                                </DataTemplate>
                            </ItemsControl.Resources>
                        </ItemsControl>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </Grid>
        <GridSplitter Grid.Row="1"
                      HorizontalAlignment="Stretch"
                      ResizeDirection="Rows"
                      Height="5" Width="auto"/>
        <DockPanel Grid.Row="2">
            <DataGrid x:Name="dataGrid" AutoGenerateColumns="False" ItemsSource="{Binding WatchItems}">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Name" Binding="{Binding Name}" />
                    <DataGridTemplateColumn Header="Description" Width="*">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Grid>
                                    <ProgressBar Value="{Binding Drawables, Converter={StaticResource DrawablesToProgressConverter}}" IsIndeterminate="False" />
                                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding Drawables.Error}" />
                                </Grid>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Width="auto">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <CheckBox x:Name="select" HorizontalAlignment="Center"
                                    IsChecked="{Binding Path=IsLoading, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                </CheckBox>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        </DockPanel>
    </Grid>
</UserControl>